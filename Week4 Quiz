1. Which of the following Python data structures is most similar to the value returned in this line of Python:
   1 x = urllib.urlopen('http://www.py4inf.com/code/romeo.txt')
regular expression
list
socket
dictionary
file handle

>> file handle


2. In this Python code, which line actually reads the data?
   1 import socket
   2 mysock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
   3 mysock.connect(('www.py4inf.com', 80))
   4 mysock.send('GET http://www.py4inf.com/code/romeo.txt HTTP/1.0\n\n')
   5 while True:
   6    data = mysock.recv(512)
   7    if ( len(data) < 1 ) :
   8       break
   9    print data
  10 mysock.close()
  
mysock.recv()
socket.socket()
mysock.close()
mysock.connect()
mysock.send()

>> mysock.recv()


3. Which of the following regular expressions would extract the URL from this line of HTML:
   1 <p>Please click <a href="http://www.dr-chuck.com">here</a></p>
   
href="(.+)
href=".+"
http://.*
<.*>

>> x href=".+"
>> x href="(.+)
>> ? <.*>


4. In this Python code, which line is most like the open() call to read a file:
   1 import socket
   2 mysock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
   3 mysock.connect(('www.py4inf.com', 80))
   4 mysock.send('GET http://www.py4inf.com/code/romeo.txt HTTP/1.0\n\n')
   5 while True:
   6   data = mysock.recv(512)
   7   if ( len(data) < 1 ) :
   8        break
   9   print data
  10 mysock.close()
  
mysock.connect()
import socket
mysock.recv()
mysock.send()
socket.socket()

>> mysock.connect()


5. Which HTTP header tells the browser the kind of document that is being returned?

Content-Type:
ETag:
Document-Type:
HTML-Document:
Metadata:

>> Content-Type:

6. What should you check before scraping a web site?

That the web site supports the HTTP GET command
That the web site allows scraping
That the web site returns HTML for all pages
That the web site only has links within the same site

>> That the web site allows scraping


7. What is the purpose of the BeautifulSoup Python library?

It animates web operations to make them more attractive
It repairs and parses HTML to make it easier for a program to understand
It optimizes files that are retrieved many times
It builds word clouds from web pages
It allows a web site to choose an attractive skin

>> It repairs and parses HTML to make it easier for a program to understand


8. What ends up in the "x" variable in the following code:
1 html = urllib.urlopen(url).read()
2 soup = BeautifulSoup(html)
3 x = soup('a')

A list of all the anchor tags (<a..) in the HTML from the URL
True if there were any anchor tags in the HTML from the URL
All of the externally linked CSS files in the HTML from the URL
All of the paragraphs of the HTML from the URL

>> x True if there were any anchor tags in the HTML from the URL
>> ? All of the paragraphs of the HTML from the URL
